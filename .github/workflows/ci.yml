name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.401'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: Backend/ZooBuilderBackend

      - name: Build
        run: dotnet build --no-restore
        working-directory: Backend/ZooBuilderBackend

      - name: Verify formatting
        run: |
          echo "Verifying code formatting..."
          # If dotnet format finds changes, exit with a custom message.
          dotnet format --verify-no-changes || (
            echo "please use 'dotnet format' to fix" && exit 1
          )
        working-directory: Backend/ZooBuilderBackend

      - name: Verify test project exists
        run: ls -la Backend/ZooBuilderBackend/ZooBuilderBackend.Tests/

      - name: Test
        run: |
          # Put results in a directory, for example “./TestResults”
          dotnet test \
            ZooBuilderBackend.Tests/ZooBuilderBackend.Tests.csproj \
            --verbosity normal \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory "./TestResults"
        working-directory: Backend/ZooBuilderBackend

      - name: Upload test results (TRX)
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: Backend/ZooBuilderBackend/TestResults/test-results.trx
  
  backend-test-coverage: # this one will be only informal
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.401'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: Backend/ZooBuilderBackend

      - name: Test with coverage (will fail if <50%)
        run: |
          dotnet test \
           ZooBuilderBackend.Tests/ZooBuilderBackend.Tests.csproj \
           --verbosity normal \
           --logger "trx;LogFileName=test-results.trx" \
           --collect "XPlat Code Coverage" \
           --results-directory "./TestResults" \
           /p:CollectCoverage=true \
           /p:CoverletOutput="./TestResults/coverage/coverage" \
           /p:CoverletOutputFormat="lcov;cobertura" \
           /p:Threshold=50 \
           /p:ThresholdType=line \
           /p:ThresholdStat=minimum \
           /p:Exclude="[xunit*]*"
          working-directory: Backend/ZooBuilderBackend
  
          - name: Install ReportGenerator
            if: success()
            run: dotnet tool install --global dotnet-reportgenerator-globaltool
  
          - name: Generate & print coverage summary
            if: success()
            run: |
              reportgenerator \
                -reports:Backend/ZooBuilderBackend/TestResults/coverage/coverage.cobertura.xml \
                -targetdir:Backend/ZooBuilderBackend/TestResults/coverage/html \
                -reporttypes:TextSummary
              echo "Coverage summary:"
              cat Backend/ZooBuilderBackend/TestResults/coverage/html/Summary.txt
  
          - name: Upload coverage artifact
            if: always() # still upload if coverage threshold fails
            uses: actions/upload-artifact@v4
            with:
              name: coverage
              path: Backend/ZooBuilderBackend/TestResults/coverage
  
  frontend:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: Frontend/ZooBuilder
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2022.3.21f1
        
      